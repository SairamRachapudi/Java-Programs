/*
**********Problem Statement***********

Andrii is good in Math, but not in Programming. 
He is asking you to solve following problem: Given an integer number N and two sets of integer A and B.
Let set A contain all numbers from 1 to N and set B contain all numbers from N + 1 to 2N.
Multiset C contains all sums a + b such that a belongs to A and b belongs to B.
Note that multiset may contain several elements with the same values. For example,
if N equals to three, then A = {1, 2, 3}, B = {4, 5, 6} and C = {5, 6, 6, 7, 7, 7, 8, 8, 9}. 
Andrii has M queries about multiset C. Every query is defined by a single integer q. 
Andrii wants to know the number of times q is contained in C. 
For example, number 6 is contained two times, 1 is not contained in C at all. 
Please, help Andrii to answer all the queries.
*/


import java.io.*;
import java.util.Scanner;

class SumQueries
{

 public static int p=0,n=0,m=0;
 public static int a[],b[];
 
  public static void main(String args[])
  {

  int c[];
  Scanner s=new Scanner(System.in);
  String f=s.next();
  n=f.charAt(0)- '0';
  m=f.charAt(1)- '0';
 
 
  a=new int[n];
  b=new int[n];
  c=new int[1000000];
  int i=0;
  for(int y=0;y<n;y++)
  {
   a[y]=y+1;
 
  }
 
 int g=0;
 for(int y=n;y<2*n;y++,g++)
  {
   b[g]=y+1;
 
  }

 int cs=0;
  
 for (int v1=0;v1<n;v1++) {
        for (int v2=0;v2<n;v2++) {
        c[cs]=a[v1]+b[v2];
           cs++;
         
        }
    }

 while(m>0)
  {
   int k=s.nextInt();
   check(k,c);
   m--;
  }
}

  public static void check(int d,int[] tr)
 {
 int count=0;
  for(int x=0;x<100;x++)
 {
 
  if(tr[x]==d)
   count++;
  
 }
 System.out.println(""+count);
 }
  
 
}
